name: Build and Deploy Node.js App to AKS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to AKS after build?'
        required: false
        default: 'false'
        type: boolean

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.set-version-number.outputs.tag_name }}
    steps:
    - name: Set version number
      id: set-version-number
      run: |
        echo "tag_name=1.2.$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
   
  build-and-push:
    needs: set-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      
      - name: Print env
        run: |
          echo ${{ needs.set-version.outputs.tag_name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/hello-world-nodejs:${{ needs.set-version.outputs.tag_name }}

  deploy:
    needs: [ set-version, build-and-push ]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'
    runs-on: ubuntu-latest
    environment:
      name: aks-deploy
      url: https://portal.azure.com/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Deploy with Helm
        run: |
          helm upgrade --install hello-world-nodejs ./helm-chart \
            --namespace mynodejs-test --create-namespace \
            --set image.repository=${{ secrets.ACR_LOGIN_SERVER }}/hello-world-nodejs \
            --set image.tag=${{ needs.set-version.outputs.tag_name }}
