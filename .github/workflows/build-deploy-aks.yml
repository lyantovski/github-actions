name: Build and Deploy Node.js App to AKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to AKS after build?'
        required: false
        default: 'false'
        type: boolean

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/hello-world-nodejs:1.0.0

  deploy:
    needs: build-and-push
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'
    runs-on: ubuntu-latest
    environment:
      name: aks-deploy
      url: https://portal.azure.com/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #- name: Set up Azure CLI
      #  uses: azure/cli@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install kubelogin
        run: |
          sudo az aks install-cli    

      - name: Set AKS context
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy with Helm
        run: |
          helm upgrade --install hello-world-nodejs ./helm-chart \
            --namespace mynodejs-test --create-namespace \
            --set image.repository=${{ secrets.ACR_LOGIN_SERVER }}/hello-world-nodejs \
            --set image.tag=1.0.0
